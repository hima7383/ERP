Word,Count
for,70
the,64
size,33
font,32
Fixed,32
text,26
accounts,23
name,20
null,19
White,19
to,18
Header,17
and,17
invoice,17
details,17
Fallback,16
background,15
Tab,15
field,15
\),\,14
Search,14
selected,14
Handle,14
error,13
Bar,12
Match,12
response,12
list,12
Table,11
Index,11
screen,11
Section,11
a,11
Items,10
primary,10
Store,10
Print,10
Grey,10
Dark,10
API,10
Cubit,10
of,10
Warehouse,10
account,9
product,9
Debug:,9
Add,9
section,9
Blue,9
first,9
when,9
all,8
if,8
search,8
Emit,8
or,8
button,7
Rounded,7
=,7
corners,7
padding,7
Reset,7
secondary,7
border,7
Invoice,6
icon,6
child,6
grey,6
Details,6
Supplier,6
with,6
Black,6
an,6
Keep,6
{,6
List,6
1,6
borderSide:,6
BorderSide(color:,6
Divider,6
\Colors.white),\,6
table,6
Content,6
content,6
in,6
Tabs,6
separately,6
OutlineInputBorder(,6
Get,5
wrapped,5
your,5
responses,5
Info,5
query,5
screen's,5
tiles,5
0,5
Notes,5
after,5
filteredProducts,5
is,5
widget,5
empty,5
Total,5
Permissions,5
headers,5
=>,4
value:,4
totals,4
be,4
blue,4
color,4
both,4
Import,4
(matches,4
},4
by,4
method,4
(primary,4
direct,4
Login,4
Light,4
selection,4
get,4
as,4
status,4
needed,4
screen),4
child:,4
!=,4
TextStyle(color:,4
Product,4
app,4
Use,3
previous,3
Accounts,3
spacing,3
can,3
dialog,3
Assuming,3
more,3
2,3
bar,3
original,3
Payments,3
ProductDetailEntity,3
hint,3
\category,\,3
Purchase,3
//,3
statement,3
Assets,3
Permission,3
here,3
âœ…,3
searching,3
focused,3
our,3
fetched,3
update,3
fetching,3
assets,3
Revert,3
network,3
build,3
Helper,3
Extract,3
state,3
Clear,3
(assets),3
Trigger,3
'data',3
(Items),3
accounts),3
Simulate,3
Nullable,3
animation,3
case,3
States,3
array,3
token,3
Close,3
logic,3
Debug,3
tile,3
{...},3
Journal,3
Fetch,3
indicator,3
showing,3
Rows,3
only,3
entries,3
Filter,3
that,3
loading,3
Text(,2
\Unpaid,\,2
return,2
Additional,2
Future<bool>,2
use,2
value);,2
object,2
tap,2
Convert,2
line,2
Show,2
&&,2
Partially,2
ProductRepository,2
Multi-account,2
Build,2
Responsive,2
\Paid,\,2
info,2
you,2
counter,2
\Color.fromARGB(255,\,2
drawer,2
Adjust,2
subtitle,2
product.name;,2
enabledBorder:,2
decoration:,2
labelStyle:,2
bank,2
onChanged:,2
Check,2
on,2
delay,2
frame,2
main,2
this,2
For,2
trigger,2
labelText:,2
entity,2
populated,2
focusedBorder:,2
screens,2
parent,2
dropdownColor:,2
\.toList(),\,2
Verify,2
item,2
look,2
style:,2
Implement,2
items:,2
Entry,2
border:,2
LoginSubmitted,2
\1,\,2
collapsed,2
inside,2
==,2
.where((product),2
Filters,2
card,2
account),2
tabs,2
handler,2
Invoices,2
\60),\,2
JSON,2
.toList();,2
\18,\,2
Perfect,2
style,2
\0,\,2
Expanded(,2
margin,2
back,2
filtered,2
Placeholder,2
\28,\,2
)),2
InputDecoration(,2
secondary),2
\Colors.grey[400]),\,2
Swipe,2
Basic,2
DropdownMenuItem(,2
final,2
\},\,2
Service,2
(value),2
\['All',\,2
horizontal,2
Paid,2
page),2
Displays,2
'Category,2
'All'),2
out,2
\Colors.grey[400]!),\,2
DropdownButtonFormField<String>(,2
text:,2
title,2
category,2
\status,\,2
show,2
Number,2
WidgetTester,2
functionality,2
AppBar,2
Bold,2
default,2
detail,2
shadow,2
-,2
items,2
Will,2
description,2
vertical,2
Description,2
navigate,2
Module,2
Remove,2
between,2
\'All',\,2
Entries,2
product.status,1
interaction,1
any,1
context.read<ProductCubit>().filterProducts(status:,1
erpdevelopment.runasp.net/Api/Purchase/Supplier/List');,1
6:,1
case-insensitive,1
(if,1
message,1
at,1
productId,1
Stock,1
(for,1
\duration,\,1
Bloc,1
gestures,1
Duration,1
lib/features/auth/logic/splash_cubit.dart,1
Hide,1
Customer,1
real,1
based,1
0:,1
specific,1
\4),\,1
print('Product,1
totalPages:,1
values,1
.map((category),1
\primary,\,1
\erpdevelopment.runasp.net/Api/sales/invoice/list'),\,1
\example,\,1
Register,1
5:,1
void,1
\16),\,1
Refresh,1
currentPage:,1
fetchProductById,1
Decode,1
Password,1
Nested,1
id),1
lib/features/auth/widgets/custom_textbox.dart,1
'Active';,1
flutter_test,1
find,1
route,1
Or,1
invoices,1
erpdevelopment.runasp.net/Api/Purchase/DebitNote/List');,1
productNames[item.productId],1
would,1
scroll,1
management,1
\1',\,1
\erpdevelopment.runasp.net/Api/finance/receipt/$id'),\,1
If,1
fade-in,1
Status,1
filtering,1
\],\,1
You,1
erpdevelopment.runasp.net/Api/inventory/product/$productId');,1
customer_screen.dart,1
\erpdevelopment.runasp.net$endpoint'),\,1
Display,1
fields,1
erpdevelopment.runasp.net/Api/Purchase/DebitNote/$id');,1
Background,1
then,1
mock,1
_productNames[item.productId],1
Recursively,1
unique,1
Events,1
Main,1
Start,1
String,1
user,1
\inactive,\,1
:,1
Source,1
0)),1
children:,1
path,1
Summary,1
Replace,1
_allProducts;,1
context),1
fetch,1
erpdevelopment.runasp.net/Api/Purchase/Supplier/$supplierId');,1
Better,1
Delay,1
Open,1
\screen,\,1
\"\Service"\\,1
splash,1
Image,1
$productNames');,1
List<Product>,1
type,1
3,1
status}),1
\updating,\,1
\"\Commercial"\\,1
erpdevelopment.runasp.net/Api/Purchase/PurchaseInvoice/List');,1
service,1
Text,1
await,1
Red,1
\erpdevelopment.runasp.net/Api/Sales/Quotation/List'),\,1
lighter,1
TextBox,1
Indent,1
debugging,1
\filteredProducts,\,1
Flutter,1
sellPrice,1
\text,\,1
purchasePrice,1
\test,\,1
\empty,\,1
context.read<ProductCubit>().filterProducts(category:,1
emit(ProductLoaded(,1
Event,1
Future<BankAccount>,1
\erpdevelopment.runasp.net/Api/Sales/RecurringInvoice/$id'),\,1
also,1
margin:,1
The,1
IDs,1
filterProducts({String,1
exists,1
(status,1
package,1
warehouses,1
productRepo.fetchProductById(item.productId);,1
call,1
product.categoriesIds.contains(int.tryParse(category))),1
lowercase,1
implemented),1
.map((status),1
'type',1
data,1
SizedBox(height:,1
Quantity,1
\erpdevelopment.runasp.net/Api/Sales/RecurringInvoice/List'),\,1
Transactions,1
Clients,1
Tap,1
SizedBox(width:,1
basic,1
2:,1
\Clean,\,1
has,1
better,1
\product,\,1
'0',1
image,1
\erpdevelopment.runasp.net/Api/finance/expense/list'),\,1
Initialize,1
(including,1
read,1
some,1
);,1
Names:,1
properties,1
(isActive,1
expanded,1
requested,1
\erpdevelopment.runasp.net/Api/finance/receipt/list'),\,1
print(),1
Temporary,1
AccountTree,1
erpdevelopment.runasp.net';,1
Forgot,1
erpdevelopment.runasp.net/Api/Purchase/PurchaseInvoice/$id');,1
pagination,1
id,1
\"\InStock"\\,1
\erpdevelopment.runasp.net/Api/Customers/Customer/GetCustomerTypeById/$customerId'),\,1
erpdevelopment.runasp.net/Api/Purchase/PurchaseReturn/List');,1
permissions,1
customer,1
deleteBankAccount(int,1
not,1
(cannot,1
erpdevelopment.runasp.net/Api/Purchase/PurchaseReturn/$id');,1
methods,1
Track,1
lib/features/auth/widgets/custom_button.dart,1
'as,1
Slightly,1
activity,1
hasNextPage:,1
\erpdevelopment.runasp.net/Api/finance/bankAccount/$id'),\,1
\creating,\,1
deleting,1
\erpdevelopment.runasp.net/Api/sales/invoice/$invoiceId'),\,1
pw',1
controller,1
\erpdevelopment.runasp.net/Api/finance/bankAccount/list'),\,1
_buildFilters(BuildContext,1
opened),1
represents,1
productOrService,1
\8),\,1
Form,1
9:,1
Simple,1
have,1
starts,1
specified,1
dynamic,1
\_hasPreviousPage,\,1
Input,1
left,1
context,1
createBankAccount(BankAccount,1
entry,1
12:,1
are,1
correct,1
lowestSellingPrice,1
Name,1
[,1
incremented,1
'+',1
internalNotes,1
texts,1
Widget,1
utility,1
hierarchical,1
alias,1
\erpdevelopment.runasp.net/Api/Customers/Customer/list'),\,1
updateBankAccount(BankAccount,1
module/sub-module,1
controls,1
Row(,1
test,1
(previous,1
3:,1
Flatten,1
Example:,1
Drawer,1
Recipts,1
8:,1
fade-out,1
EdgeInsets.symmetric(vertical:,1
print(ok);,1
Location,1
lookup),1
\'Category',\,1
its,1
Account,1
categoriesIds,1
matches,1
Date,1
To,1
verify,1
Top,1
Corrected,1
opacity,1
expandable,1
\_hasNextPage,\,1
observer,1
readability,1
event,1
products:,1
Products,1
Fade,1
\_currentPage,\,1
perform,1
Reference,1
(next,1
\_totalPages,\,1
\"\Individual"\\,1
Null,1
(category,1
erpdevelopment.runasp.net/Api/inventory/product-and-service/Paginated');,1
Expandable,1
2'],1
Type,1
Log,1
Daily,1
fade,1
overlay,1
childAccounts,1
\_buildFilters(context),\,1
implement,1
\'Status',\,1
modern,1
Notify,1
hasPreviousPage:,1
Inactive,1
send,1
from,1
widgets,1
\'Active',\,1
employee.dart,1
7:,1
placeholder,1
'Inactive'],1
loaded,1
\erpdevelopment.runasp.net/Api/finance/expense/$id'),\,1
Bottom,1
creates,1
));,1
active,1
bank_account.dart,1
This,1
\Active,\,1
right,1
WarehousePermission,1
\erpdevelopment.runasp.net/Api/Sales/Quotation/$id'),\,1
Tween,1
Kept,1
isActive,1
1:,1
\tree,\,1
Pass,1
customer_entity.dart,1
4:,1
,1
